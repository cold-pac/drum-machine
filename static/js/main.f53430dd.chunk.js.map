{"version":3,"sources":["App.js","index.js"],"names":["keys","Slider","props","className","heading","sliderOn","onClick","sliderClick","keyMap1","keyMap2","App","state","isPowerOn","bank1","mostRecentAudio","handlePadClick","bind","handlePowerSliderClick","handleBankSliderClick","event","this","window","document","getElementById","target","id","children","play","setState","split","console","log","toUpperCase","map","elem","index","key","src","React","Component","addEventListener","indexOf","toLowerCase","click","classList","add","remove","ReactDOM","render"],"mappings":"mPAGMA,G,MAAO,aAETC,EAAS,SAACC,GACV,OACA,yBAAKC,UAAY,UACf,yBAAKA,UAAY,gBAAgBD,EAAME,SACvC,yBAAKD,UAAaD,EAAMG,SAAS,YAAY,sBAAuBC,QAAWJ,EAAMK,aACnF,yBAAKJ,UAAY,oBAMrBK,EAAU,CACZ,EAAK,cACL,EAAK,yBACL,EAAK,cACL,EAAK,YACL,EAAK,eACL,EAAK,YACL,EAAK,aACL,EAAK,eACL,EAAK,UAGHC,EAAU,CACZ,EAAK,2BACL,EAAK,8BACL,EAAK,gCACL,EAAK,4BACL,EAAK,kCACL,EAAK,2BACL,EAAK,+BACL,EAAK,6BACL,EAAK,6BAGDC,E,kDACJ,WAAaR,GAAQ,IAAD,8BAClB,cAAMA,IACDS,MAAQ,CACXC,WAAW,EACXC,OAAO,EACPC,gBAAiB,IAEnB,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,uBAAyB,EAAKA,uBAAuBD,KAA5B,gBAC9B,EAAKE,sBAAwB,EAAKA,sBAAsBF,KAA3B,gBATX,E,2DAYJG,GACVC,KAAKT,MAAMC,YACbS,OAAOC,SAASC,eAAeJ,EAAMK,OAAOC,IAAIC,SAAS,GAAGC,OACxDP,KAAKT,MAAME,MACbO,KAAKQ,SAAS,CAACd,gBAAiBN,EAAQW,EAAMK,OAAOC,GAAGI,MAAM,IAAI,MAElET,KAAKQ,SAAS,CAACd,gBAAiBL,EAAQU,EAAMK,OAAOC,GAAGI,MAAM,IAAI,S,+CAMtET,KAAKQ,UAAS,SAAUjB,GAAQ,MAAO,CAACC,WAAYD,EAAMC,cACtDQ,KAAKT,MAAMC,UACbQ,KAAKQ,SAAS,CAACd,gBAAiB,cAEhCM,KAAKQ,SAAS,CAACd,gBAAiB,O,8CAKlCM,KAAKQ,UAAS,SAAUjB,GAAQ,MAAO,CAACE,OAAQF,EAAME,UACtDiB,QAAQC,IAAIX,KAAKT,MAAME,S,+BAGd,IAAD,OACR,OACE,yBAAKY,GAAK,gBACR,yBAAKA,GAAK,QACPzB,EAAKgC,cAAcH,MAAM,IAAII,KAAI,SAACC,EAAMC,GAAP,OAAiB,yBAAK7B,QAAW,EAAKS,eAAgBZ,UAAY,WAAWiC,IAAOD,EAAOV,GAAMS,EAAO,KAAMA,EAC9I,2BAAOT,GAAMS,EAAM/B,UAAY,OAAQkC,IAAO,EAAK1B,MAAME,MAAO,WAAaL,EAAQ0B,GAAQ,WAAazB,EAAQyB,UAGtH,yBAAKT,GAAK,WACR,kBAAC,EAAD,CAAQrB,QAAU,QAAQC,SAAYe,KAAKT,MAAMC,UAAWL,YAAea,KAAKH,yBAChF,kBAAC,EAAD,CAAQb,QAAU,OAAOC,SAAYe,KAAKT,MAAME,MAAON,YAAea,KAAKF,wBAC3E,yBAAKO,GAAK,eACR,yBAAKA,GAAK,iBAAV,WACA,yBAAKA,GAAK,WAAWL,KAAKT,MAAMG,wB,GAnD1BwB,IAAMC,WA2DxBlB,OAAOmB,iBAAiB,WAAW,SAAUrB,IACc,IAArDnB,EAAK6B,MAAM,IAAIY,QAAQtB,EAAMiB,IAAIM,iBACnCtB,KAAKE,SAASC,eAAeJ,EAAMiB,IAAIJ,cAAgB,KAAKW,QAC5DvB,KAAKE,SAASC,eAAeJ,EAAMiB,IAAIJ,cAAgB,KAAKY,UAAUC,IAAI,eAI9ExB,OAAOmB,iBAAiB,SAAS,SAAUrB,IACgB,IAArDnB,EAAK6B,MAAM,IAAIY,QAAQtB,EAAMiB,IAAIM,gBACnCtB,KAAKE,SAASC,eAAeJ,EAAMiB,IAAIJ,cAAgB,KAAKY,UAAUE,OAAO,cAIlEpC,QC1GfqC,IAASC,OACP,kBAAE,EAAF,MACA1B,SAASC,eAAe,U","file":"static/js/main.f53430dd.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nconst keys = \"qweasdzxc\";\n\nlet Slider = (props) => {\n    return (  \n    <div className = \"slider\">\n      <div className = \"sliderHeader\">{props.heading}</div>\n      <div className = {props.sliderOn?\"sliderBar\":\"sliderBar power-off\"} onClick = {props.sliderClick}>\n        <div className = \"sliderCircle\"></div>\n      </div>\n    </div>\n  );\n}\n\nlet keyMap1 = {\n  'Q': 'Beat01a.mp3',\n  'W': 'Check_your_answers.mp3',\n  'E': 'Cowbell.wav',\n  'A': 'HiHat.wav', \n  'S': 'Rim Shot.wav', \n  'D': 'Snare.wav',\n  'Z': 'Tamb 1.wav',\n  'X': 'Motorway.mp3',\n  'C': 'FX.mp3'\n}\n\nlet keyMap2 = {\n  'Q': 'acoustic/clap-analog.wav',\n  'W': 'acoustic/crash-acoustic.wav',\n  'E': 'acoustic/hihat-acoustic02.wav',\n  'A': 'acoustic/kick-classic.wav', \n  'S': 'acoustic/openhat-acoustic01.wav', \n  'D': 'acoustic/perc-tribal.wav',\n  'Z': 'acoustic/ride-acoustic01.wav',\n  'X': 'acoustic/shaker-analog.wav',\n  'C': 'acoustic/snare-analog.wav'\n}\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      isPowerOn: true,\n      bank1: true,\n      mostRecentAudio: \"\"\n    }\n    this.handlePadClick = this.handlePadClick.bind(this);\n    this.handlePowerSliderClick = this.handlePowerSliderClick.bind(this);\n    this.handleBankSliderClick = this.handleBankSliderClick.bind(this);\n  }\n\n  handlePadClick (event) {\n    if (this.state.isPowerOn) {\n      window.document.getElementById(event.target.id).children[0].play();\n      if (this.state.bank1) {\n        this.setState({mostRecentAudio: keyMap1[event.target.id.split(\"\")[0]] });\n      } else {\n        this.setState({mostRecentAudio: keyMap2[event.target.id.split(\"\")[0]] });\n      }\n    }\n  }\n\n  handlePowerSliderClick () {\n    this.setState(function (state) {return {isPowerOn: !state.isPowerOn}}); \n    if (this.state.isPowerOn) {\n      this.setState({mostRecentAudio: \"Power Off\"})\n    } else {\n      this.setState({mostRecentAudio: \"\"});\n    }\n  }\n\n  handleBankSliderClick () {\n    this.setState(function (state) {return {bank1: !state.bank1}});\n    console.log(this.state.bank1);\n  }\n\n  render () {\n    return  (\n      <div id = \"drum-machine\">\n        <div id = \"pads\">\n          {keys.toUpperCase().split(\"\").map((elem, index) => <div onClick = {this.handlePadClick} className = \"drum-pad\" key = {index} id = {elem + \"p\"}>{elem}\n            <audio id = {elem} className = \"clip\"  src = {this.state.bank1?(\"Samples/\" + keyMap1[elem]):(\"Samples/\" + keyMap2[elem])} /> \n          </div>)}\n        </div>\n        <div id = \"buttons\">\n          <Slider heading = \"Power\" sliderOn = {this.state.isPowerOn} sliderClick = {this.handlePowerSliderClick}/> \n          <Slider heading = \"Bank\" sliderOn = {this.state.bank1} sliderClick = {this.handleBankSliderClick}/>\n          <div id = \"displayUnit\">\n            <div id = \"displayHeader\">Display</div>\n            <div id = \"display\">{this.state.mostRecentAudio}</div>\n          </div>\n        </div>\n      </div>\n      );\n  }\n}\n\nwindow.addEventListener(\"keydown\", function (event) {\n  if (keys.split(\"\").indexOf(event.key.toLowerCase()) !== -1) {\n    this.document.getElementById(event.key.toUpperCase() + \"p\").click();\n    this.document.getElementById(event.key.toUpperCase() + \"p\").classList.add(\"pressed\");\n  }\n});\n\nwindow.addEventListener(\"keyup\", function (event) {\n  if (keys.split(\"\").indexOf(event.key.toLowerCase()) !== -1) {\n    this.document.getElementById(event.key.toUpperCase() + \"p\").classList.remove(\"pressed\");\n  }\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  < App /> ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}